import{Buffer as h}from"buffer";import{networkInterfaces as w}from"os";var m=/^(\d{1,3}\.){3,3}\d{1,3}$/,b=/^(::)?(((\d{1,3}\.){3}(\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;function d(n){return m.test(n)}function P(n){return b.test(n)}function l(n,o,e){let f=~~e,s;if(d(n))s=o||h.alloc(f+4),n.split(/\./g).forEach(t=>{s[f++]=parseInt(t,10)&255});else if(P(n)){let t=n.split(":",8),r;for(r=0;r<t.length;r++){let i=d(t[r]),a;i&&(a=l(t[r]),t[r]=a.slice(0,2).toString("hex")),a&&++r<8&&t.splice(r,0,a.slice(2,4).toString("hex"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(r=0;r<t.length&&t[r]!=="";r++);let i=[r,1];for(r=9-t.length;r>0;r--)i.push("0");t.splice.apply(t,i)}for(s=o||h.alloc(f+16),r=0;r<t.length;r++){let i=parseInt(t[r],16);s[f++]=i>>8&255,s[f++]=i&255}}if(!s)throw Error(`Invalid ip address: ${n}`);return s}function u(n,o,e){let f=~~o,s=e||n.length-f,t=[],r,i;if(s===4){for(i=0;i<s;i++)t.push(n[f+i]);r=t.join(".")}else if(s===16){for(i=0;i<s;i+=2)t.push(n.readUInt16BE(f+i).toString(16));r=t.join(":"),r=r.replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3"),r=r.replace(/:{3,4}/,"::")}return r}function g(n){return n?n.toLowerCase():"ipv4"}function I(n,o){let e=n,f=e>32?"ipv6":g(o),s=4;f==="ipv6"&&(s=16);let t=h.alloc(s);for(let r=0,i=t.length;r<i;++r){let a=8;e<8&&(a=e),e-=a,t[r]=~(255>>a)&255}return u(t)}function p(n,o){let e=l(n),f=l(o),s=h.alloc(Math.max(e.length,f.length)),t=0;if(e.length===f.length)for(t=0;t<e.length;t++)s[t]=e[t]&f[t];else if(f.length===4)for(t=0;t<f.length;t++)s[t]=e[e.length-4+t]&f[t];else{for(t=0;t<s.length-6;t++)s[t]=0;for(s[10]=255,s[11]=255,t=0;t<e.length;t++)s[t+12]=e[t]&f[t+12];t+=12}for(;t<s.length;t++)s[t]=0;return u(s)}function k(n){let o=n.split("/"),e=o[0];if(o.length!==2)throw new Error(`invalid CIDR subnet: ${e}`);let f=I(parseInt(o[1],10));return p(e,f)}function _(n){let o=0;return n.split(".").forEach(e=>{o<<=8,o+=parseInt(e,10)}),o>>>0}function c(n){return`${n>>>24}.${n>>16&255}.${n>>8&255}.${n&255}`}function S(n,o){let e=_(p(n,o)),f=l(o),s=0;for(let r=0;r<f.length;r++)if(f[r]===255)s+=8;else{let i=f[r]&255;for(;i;)i=i<<1&255,s++}let t=2**(32-s);return{networkAddress:c(e),firstAddress:t<=2?c(e):c(e+1),lastAddress:t<=2?c(e+t-1):c(e+t-2),broadcastAddress:c(e+t-1),subnetMask:o,subnetMaskLength:s,numHosts:t<=2?t:t-2,length:t,contains(r){return e===_(p(r,o))}}}function y(n){let o=n.split("/"),e=o[0];if(o.length!==2)throw new Error(`invalid CIDR subnet: ${e}`);let f=I(parseInt(o[1],10));return S(e,f)}function L(n){let o,e=l(n);for(o=0;o<e.length;o++)e[o]=255^e[o];return u(e)}function B(n,o){let e,f=l(n),s=l(o);if(f.length===s.length){for(e=0;e<f.length;++e)f[e]|=s[e];return u(f)}let t=f,r=s;s.length>f.length&&(t=s,r=f);let i=t.length-r.length;for(e=i;e<t.length;++e)t[e]|=r[e-i];return u(t)}function F(n,o){let e,f=l(n),s=l(o);if(f.length===s.length){for(e=0;e<f.length;e++)if(f[e]!==s[e])return!1;return!0}if(s.length===4){let r=s;s=f,f=r}for(e=0;e<10;e++)if(s[e]!==0)return!1;let t=s.readUInt16BE(10);if(t!==0&&t!==65535)return!1;for(e=0;e<4;e++)if(f[e]!==s[e+12])return!1;return!0}function E(n){return/^(::f{4}:)?10\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(n)||/^(::f{4}:)?192\.168\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(n)||/^(::f{4}:)?172\.(1[6-9]|2\d|30|31)\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(n)||/^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(n)||/^(::f{4}:)?169\.254\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(n)||/^f[cd][0-9a-f]{2}:/i.test(n)||/^fe80:/i.test(n)||/^::1$/.test(n)||/^::$/.test(n)}function x(n){return!E(n)}function $(n){return/^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})/.test(n)||/^fe80::1$/.test(n)||/^::1$/.test(n)||/^::$/.test(n)}function v(n){let o=g(n);if(o!=="ipv4"&&o!=="ipv6")throw new Error("family must be ipv4 or ipv6");return o==="ipv4"?"127.0.0.1":"fe80::1"}function A(n,o){let e=w(),f=g(o);if(n&&n!=="private"&&n!=="public"){let t=e[n].filter(r=>r.family.toLowerCase()===f);return t.length===0?void 0:t[0].address}let s=Object.keys(e).map(t=>{let r=e[t].filter(i=>i.family.toLowerCase()!==f||$(i.address)?!1:n?n==="public"?E(i.address):x(i.address):!0);return r.length?r[0].address:void 0}).filter(Boolean);return s.length?s[0]:v(f)}export{m as IPES_ipv4Regex,b as IPES_ipv6Regex,g as _normalizeFamily,A as address,k as cidr,y as cidrSubnet,c as fromLong,I as fromPrefixLen,m as ipv4Regex,b as ipv6Regex,F as isEqual,$ as isLoopback,E as isPrivate,x as isPublic,d as isV4Format,P as isV6Format,v as loopback,p as mask,L as not,B as or,S as subnet,l as toBuffer,_ as toLong,u as toString};
